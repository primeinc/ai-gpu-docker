# Original Author: papuSpartan
# Source: https://github.com/papuSpartan/stable-diffusion-webui-auto-tls-https
# Description: This script will generate a self signed certificate and key pair for the webui
# Origin URL "https://raw.githubusercontent.com/papuSpartan/stable-diffusion-webui-auto-tls-https/master/scripts/auto_tls.py"

import os
import certifi
import certipie

class Options:
  def __init__(self):
    self.self_sign = True
    self.tls_keyfile = "/root/webui.key"
    self.tls_certfile = "/root/webui.cert"
    self.tls_bundle = "/root/webui.bundle"

    filename = '/etc/servername'
    try:
      with open(filename, 'r') as file:
        self.server_name = file.read().strip()
    except:
      self.server_name = 'localhost'

cmd_opts = Options()

def setup_bundle(certpath):
  with open(certpath) as cert, \
    open(certifi.where()) as certifi_bundle, \
    open(cmd_opts.tls_bundle, "w") as wui_bundle:
    
    wui_bundle.write(certifi_bundle.read())
    wui_bundle.write(cert.read())

  os.environ['REQUESTS_CA_BUNDLE'] = cmd_opts.tls_bundle

if not os.path.exists(cmd_opts.tls_certfile) and not os.path.exists(cmd_opts.tls_keyfile):
  privkey = certipie.create_private_key(filename=cmd_opts.tls_keyfile)
  certipie.create_auto_certificate(
    filename=cmd_opts.tls_certfile,
    private_key=privkey,
    common_name=cmd_opts.server_name if cmd_opts.server_name else "localhost",
    alternative_names=None,
    organization="webui",
    country='TD',
    state_or_province="fake state",
    city="fake city",
  )
  print("Generated new key/cert pair")
else:
  print("Default key/cert pair was already generated by webui")

setup_bundle(cmd_opts.tls_certfile)
print('Self Signed Certificate trust store ready')
print("-------------------------------------------")
print(f"SERVER_KEY = '{cmd_opts.tls_keyfile}'")
print(f"SERVER_CERT = '{cmd_opts.tls_certfile}'")
print(f"SERVER_BUNDLE = '{cmd_opts.tls_bundle}'")
print("-------------------------------------------")
print("These variables have been exported to your bashrc file")

bashrc_path = "/root/.bashrc"
with open(bashrc_path, "a") as bashrc:
  bashrc.write(f"export SERVER_KEY='{cmd_opts.tls_keyfile}'\n")
  bashrc.write(f"export SERVER_CERT='{cmd_opts.tls_certfile}'\n")
  bashrc.write(f"export SERVER_BUNDLE='{cmd_opts.tls_bundle}'\n")
  bashrc.write(f"export REQUESTS_CA_BUNDLE='{cmd_opts.tls_bundle}'\n")
